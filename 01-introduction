import numpy as np
x = np.array([[1,2,3],[4,5,6]])
print("x:\n{}".format(x))
-----------------------------------------------------------------------------
import numpy as np
from scipy import sparse
eye = np.eye(4)
print("numpy array:\n{}".format(eye))
#将numpy数组转换为CSR格式的scipy稀疏矩阵
#只保存非零元素
sparse_matrix = sparse.csr_matrix(eye)
print("\nScipy sparse CSR matrix:\n{}".format(sparse_matrix))

date = np.ones(4)
print(date)
row_indices = np.arange(4)
col_indices = np.arange(4)
#将数组转换为矩阵，行索引，列索引都为1~4
eye_coo = sparse.coo_matrix((date,(row_indices,col_indices)))
print("COO representation：\n{}".format(eye_coo))
-----------------------------------------------------------------------------
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(-10,10,100)
#用正弦函数创建第二个数组
y = np.sin(x)
#plot 函数绘制一个数组关于另一个数组的折线图
plt.plot(x,y,marker="x")
plt.show()
-----------------------------------------------------------------------------
import pandas as pd
from IPython.display import display
#创建关于人的简单数据集
date = {'Name':["John",'Anna',"Peter","Linda"],
        'Location':["New York","Paris","Berlin","London"],
        'Age':[24,13,53,33]}
date_pandas = pd.DataFrame(date)
display(date_pandas)
display(date_pandas[date_pandas.Age>30])
-----------------------------------------------------------------------------
from sklearn.datasets import load_iris
iris_dataset = load_iris()
import pandas as pd
# print("Key of iris_dataset:\n{}".format(iris_dataset.keys()))
# print(iris_dataset['DESCR'][:500]+"\n...")
# print("Target names: {}".format(iris_dataset['target_names']))
# print("Feature names:\n{}".format(iris_dataset['feature_names']))
# print("Type of data:{}".format(type(iris_dataset['data'])))
# print("Shape of data:{}".format(iris_dataset['data'].shape))
# print("First five row of data :\n{}".format(iris_dataset['data'][:5]))
# print("Type of target:{}".format(type(iris_dataset['target'])))
# print("Shape of target:{}".format(iris_dataset['target'].shape))
# print("Target:\n{}".format(iris_dataset['target']))
import mglearn
import matplotlib.pyplot as plt
from matplotlib.pyplot import savefig
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(iris_dataset['data'],iris_dataset['target'],random_state=0)
# print("X_train shape:{}".format(X_train.shape))
# print("y_train shape:{}".format(y_train.shape))
# print("X_test shape:{}".format(X_test.shape))
# print("y_test shape:{}".format(y_test.shape))
iris_dataframe = pd.DataFrame(X_train,columns = iris_dataset.feature_names)
grr = pd.plotting.scatter_matrix(iris_dataframe,c = y_train,figsize = (15,15),marker = 'o',hist_kwds={'bins':20},s=60,alpha=8,cmap = mglearn.cm3)
plt.savefig("D:\MechineLearning\python/000.jpg")
plt.show()
